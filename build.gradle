buildscript {
	ext {
		springBootVersion = '2.7.4'
		lombokVersion = '1.18.22'
		hamcrestVersion = '2.2'
		mockitoVersion = '3.4.6'
		avro_version = '1.11.0'
		avro_plugin_version = '1.3.0'
		confluent_version = '5.3.0'
	}
	repositories {
		mavenCentral()
	}
}

plugins {
	id 'org.springframework.boot' version "$springBootVersion"
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.github.davidmc24.gradle.plugin.avro' version "${avro_plugin_version}"
}

group = 'com.learning'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url "https://packages.confluent.io/maven/" }
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-cache:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-validation:$springBootVersion"
	implementation "com.hazelcast:hazelcast:4.0.1"
	implementation "com.hazelcast:hazelcast-spring"
	implementation 'org.modelmapper:modelmapper:3.1.0'
	implementation "org.apache.avro:avro:${avro_version}"
	implementation "io.confluent:kafka-avro-serializer:${confluent_version}"
	implementation "org.springframework.cloud:spring-cloud-function-context"
	implementation "org.springframework.cloud:spring-cloud-stream-schema:2.2.1.RELEASE"

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor "org.projectlombok:lombok:$lombokVersion"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation("org.junit.jupiter:junit-jupiter") {
		because 'allows to write and run Jupiter tests'
	}
	testImplementation "org.hamcrest:hamcrest-library:$hamcrestVersion"
	testImplementation "org.hamcrest:hamcrest:$hamcrestVersion"

	testImplementation "org.mockito:mockito-core:$mockitoVersion"
	testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
}

tasks.named('test') {
	useJUnitPlatform()
}
